version: '3.9'

services:

  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: unless-stopped
    environment:
      TZ: Asia/Shanghai
    sysctls:
      net.core.somaxconn: 65535
    ports:
      - "6379:6379"
    networks:
      - default
    volumes:
      - ./data/redis:/data
    command: redis-server --requirepass secret --appendonly yes --daemonize no

  mongo:
    container_name: mongo
    image: mongo:latest
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
    ports:
      - "27017:27017"
    networks:
      - default
    volumes:
      - ./data/mongo:/data/db

  mysql:
    container_name: mysql
    image: mysql:8.0.26
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: demo
      MYSQL_USER: db_user
      MYSQL_PASSWORD: secret
    privileged: true
    restart: unless-stopped
    ports:
      - "3306:3306"
    networks:
      - default
    command:
      --default-authentication-plugin=mysql_native_password
    volumes:
      - ./data/mysql:/var/lib/mysql

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management-alpine
    hostname: rabbitmq
    environment:
      TZ: Asia/Shanghai
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: secret
    restart: unless-stopped
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - default
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq

  nats:
    container_name: nats
    image: nats:alpine
    restart: unless-stopped
    ports:
      - "4222:4222"
      - "8222:8222"
    networks:
      - default

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    restart: unless-stopped
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
    networks:
      - default

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    hostname: prometheus
    restart: unless-stopped
    volumes:
      - ./conf/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - default

  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    user: "472"
    volumes:
      - ./data/grafana:/var/lib/grafana # chown -R 472:472 grafana/
    environment:
      GF_SECURITY_ADMIN_USER: ${ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${ADMIN_PASSWORD:-secret}
      GF_USERS_ALLOW_SIGN_UP: 'false'
    ports:
      - "3000:3000"
    networks:
      - default

  elasticsearch:
    image:  docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      ELASTIC_USERNAME: elastic
      ELASTIC_PASSWORD: secret
      ES_JAVA_OPTS: -Xms256m -Xmx256m
      node.name: es-node
      discovery.type: single-node
      bootstrap.memory_lock: "true"
    networks:
      - default
    ports:
      - "9200:9200"
      - "9300:9300"

networks:
  default:
    external: true
    name: dev-network
